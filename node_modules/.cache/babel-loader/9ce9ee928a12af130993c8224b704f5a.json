{"ast":null,"code":"import _classCallCheck from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tony/github/tmp/leftover/src/components/SearchBar/SearchBar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaClose, FaSearch } from 'react-icons/fa';\nimport './SearchBar.css';\n\nvar SearchBar =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(SearchBar, _React$PureComponent);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBar).call(this, props));\n\n    _this.onTextChange = function (text) {\n      var changeHandler = _this.props.changeHandler;\n      changeHandler(text);\n\n      _this.setState({\n        text: text\n      });\n    };\n\n    _this.buttonPress = function () {\n      var text = _this.state.text;\n\n      if (text) {\n        _this.setState({\n          text: ''\n        });\n      }\n\n      _this.textInput.current.focus();\n    };\n\n    _this.state = {\n      text: ''\n    };\n    _this.textInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var text = this.state.text;\n      var holder = this.props.holder;\n      return React.createElement(\"div\", {\n        className: \"searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: holder,\n        className: \"searchBar-input\",\n        type: \"text\",\n        value: text,\n        ref: this.textInput,\n        onChange: function onChange(event) {\n          return _this2.onTextChange(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"searchBar-button\",\n        type: \"button\",\n        onClick: this.buttonPress,\n        style: {\n          backgroundColor: '#2C3E50'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, text ? React.createElement(FaClose, {\n        size: 20,\n        style: {\n          color: '#5D6D7E'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) : React.createElement(FaSearch, {\n        style: {\n          color: '#5D6D7E'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchBar;\n}(React.PureComponent);\n\nexport { SearchBar as default };\nSearchBar.propTypes = {\n  holder: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/tony/github/tmp/leftover/src/components/SearchBar/SearchBar.jsx"],"names":["React","PropTypes","FaClose","FaSearch","SearchBar","props","onTextChange","text","changeHandler","setState","buttonPress","state","textInput","current","focus","createRef","holder","event","target","value","backgroundColor","color","PureComponent","propTypes","string","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,gBAAlC;AACA,OAAO,iBAAP;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAQnBC,YARmB,GAQJ,UAACC,IAAD,EAAU;AAAA,UACfC,aADe,GACG,MAAKH,KADR,CACfG,aADe;AAEvBA,MAAAA,aAAa,CAACD,IAAD,CAAb;;AACA,YAAKE,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAJA;AAAF,OAAd;AACD,KAZkB;;AAAA,UAcnBG,WAdmB,GAcL,YAAM;AAAA,UACVH,IADU,GACD,MAAKI,KADJ,CACVJ,IADU;;AAElB,UAAIA,IAAJ,EAAU;AACR,cAAKE,QAAL,CAAc;AAAEF,UAAAA,IAAI,EAAE;AAAR,SAAd;AACD;;AACD,YAAKK,SAAL,CAAeC,OAAf,CAAuBC,KAAvB;AACD,KApBkB;;AAEjB,UAAKH,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,UAAKK,SAAL,GAAiBZ,KAAK,CAACe,SAAN,EAAjB;AALiB;AAMlB;;;;6BAgBQ;AAAA;;AAAA,UACCR,IADD,GACU,KAAKI,KADf,CACCJ,IADD;AAAA,UAECS,MAFD,GAEY,KAAKX,KAFjB,CAECW,MAFD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,WAAW,EAAEA,MAApB;AAA4B,QAAA,SAAS,EAAC,iBAAtC;AAAwD,QAAA,IAAI,EAAC,MAA7D;AAAoE,QAAA,KAAK,EAAET,IAA3E;AAAiF,QAAA,GAAG,EAAE,KAAKK,SAA3F;AAAsG,QAAA,QAAQ,EAAE,kBAAAK,KAAK;AAAA,iBAAK,MAAI,CAACX,YAAL,CAAkBW,KAAK,CAACC,MAAN,CAAaC,KAA/B,CAAL;AAAA,SAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAmD,QAAA,OAAO,EAAE,KAAKT,WAAjE;AAA8E,QAAA,KAAK,EAAE;AAAEU,UAAAA,eAAe,EAAE;AAAnB,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIb,IAAI,GAAG,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAE,EAAf;AAAmB,QAAA,KAAK,EAAE;AAAEc,UAAAA,KAAK,EAAE;AAAT,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CAFF,CADF;AAWD;;;;EArCoCrB,KAAK,CAACsB,a;;SAAxBlB,S;AAwCrBA,SAAS,CAACmB,SAAV,GAAsB;AACpBP,EAAAA,MAAM,EAAEf,SAAS,CAACuB,MAAV,CAAiBC,UADL;AAEpBjB,EAAAA,aAAa,EAAEP,SAAS,CAACyB,IAAV,CAAeD;AAFV,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaClose, FaSearch } from 'react-icons/fa';\nimport './SearchBar.css';\n\nexport default class SearchBar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n    this.textInput = React.createRef();\n  }\n\n  onTextChange = (text) => {\n    const { changeHandler } = this.props;\n    changeHandler(text);\n    this.setState({ text });\n  }\n\n  buttonPress = () => {\n    const { text } = this.state;\n    if (text) {\n      this.setState({ text: '' });\n    }\n    this.textInput.current.focus();\n  }\n\n  render() {\n    const { text } = this.state;\n    const { holder } = this.props;\n    return (\n      <div className=\"searchBar\">\n        <input placeholder={holder} className=\"searchBar-input\" type=\"text\" value={text} ref={this.textInput} onChange={event => (this.onTextChange(event.target.value))} />\n        <button className=\"searchBar-button\" type=\"button\" onClick={this.buttonPress} style={{ backgroundColor: '#2C3E50' }}>\n          {\n            text ? <FaClose size={20} style={{ color: '#5D6D7E' }} />\n              : <FaSearch style={{ color: '#5D6D7E' }} />\n          }\n        </button>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  holder: PropTypes.string.isRequired,\n  changeHandler: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
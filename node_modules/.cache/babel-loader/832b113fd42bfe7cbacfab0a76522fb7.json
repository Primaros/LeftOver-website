{"ast":null,"code":"import _classCallCheck from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tony/github/tmp/leftover/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tony/github/tmp/leftover/src/components/TextAnime.jsx\";\nimport PropTypes from 'prop-types';\nimport TextyAnim from 'rc-texty';\nimport React from 'react';\n\nvar TextAnime =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TextAnime, _React$PureComponent);\n\n  function TextAnime(props) {\n    var _this;\n\n    _classCallCheck(this, TextAnime);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextAnime).call(this, props));\n\n    _this.componentWillUnmount = function () {\n      if (_this.timerHandle) {\n        clearTimeout(_this.timerHandle);\n        _this.timerHandle = 0;\n      }\n    };\n\n    _this.switchtext = function () {\n      var show = _this.state.show;\n\n      if (show) {\n        _this.setState({\n          show: false,\n          text: ''\n        });\n\n        _this.timerHandle = setTimeout(function () {\n          _this.switchtext();\n        }, 100);\n      } else {\n        _this.id = (_this.id + 1) % _this.texts.length;\n\n        _this.setState({\n          text: _this.texts[_this.id][0],\n          show: true\n        });\n\n        var showTime = typeof _this.texts[_this.id][1] !== 'undefined' && _this.texts[_this.id][1] !== 0 ? _this.texts[_this.id][1] * 1000 : 10000 - _this.interval * _this.texts[_this.id][0].length;\n        _this.timerHandle = setTimeout(function () {\n          _this.switchtext();\n        }, showTime);\n      }\n    };\n\n    var _this$props = _this.props,\n        texts = _this$props.texts,\n        base = _this$props.base;\n    _this.texts = texts;\n    _this.state = {\n      show: true,\n      text: base\n    };\n    _this.id = -1;\n    _this.interval = 50;\n    return _this;\n  }\n\n  _createClass(TextAnime, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerHandle = setTimeout(function () {\n        _this2.switchtext();\n      }, 5000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var text = this.state.text;\n      return React.createElement(TextyAnim, {\n        type: \"mask-top\",\n        mode: \"smooth\",\n        interval: this.interval,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, text);\n    }\n  }]);\n\n  return TextAnime;\n}(React.PureComponent);\n\nexport { TextAnime as default };\nTextAnime.propTypes = {\n  texts: PropTypes.arrayOf(PropTypes.array).isRequired,\n  base: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/tony/github/tmp/leftover/src/components/TextAnime.jsx"],"names":["PropTypes","TextyAnim","React","TextAnime","props","componentWillUnmount","timerHandle","clearTimeout","switchtext","show","state","setState","text","setTimeout","id","texts","length","showTime","interval","base","PureComponent","propTypes","arrayOf","array","isRequired","string"],"mappings":";;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAgBnBC,oBAhBmB,GAgBI,YAAM;AAC3B,UAAI,MAAKC,WAAT,EAAsB;AACpBC,QAAAA,YAAY,CAAC,MAAKD,WAAN,CAAZ;AACA,cAAKA,WAAL,GAAmB,CAAnB;AACD;AACF,KArBkB;;AAAA,UAuBnBE,UAvBmB,GAuBN,YAAM;AAAA,UACTC,IADS,GACA,MAAKC,KADL,CACTD,IADS;;AAGjB,UAAIA,IAAJ,EAAU;AACR,cAAKE,QAAL,CAAc;AAAEF,UAAAA,IAAI,EAAE,KAAR;AAAeG,UAAAA,IAAI,EAAE;AAArB,SAAd;;AACA,cAAKN,WAAL,GAAmBO,UAAU,CAAC,YAAM;AAAE,gBAAKL,UAAL;AAAoB,SAA7B,EAA+B,GAA/B,CAA7B;AACD,OAHD,MAGO;AACL,cAAKM,EAAL,GAAU,CAAC,MAAKA,EAAL,GAAU,CAAX,IAAgB,MAAKC,KAAL,CAAWC,MAArC;;AACA,cAAKL,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAE,MAAKG,KAAL,CAAW,MAAKD,EAAhB,EAAoB,CAApB,CADM;AAEZL,UAAAA,IAAI,EAAE;AAFM,SAAd;;AAIA,YAAMQ,QAAQ,GAAI,OAAO,MAAKF,KAAL,CAAW,MAAKD,EAAhB,EAAoB,CAApB,CAAP,KAAkC,WAAlC,IAAiD,MAAKC,KAAL,CAAW,MAAKD,EAAhB,EAAoB,CAApB,MAA2B,CAA7E,GAAkF,MAAKC,KAAL,CAAW,MAAKD,EAAhB,EAAoB,CAApB,IAAyB,IAA3G,GAAkH,QAAQ,MAAKI,QAAL,GAAgB,MAAKH,KAAL,CAAW,MAAKD,EAAhB,EAAoB,CAApB,EAAuBE,MAAlL;AACA,cAAKV,WAAL,GAAmBO,UAAU,CAAC,YAAM;AAAE,gBAAKL,UAAL;AAAoB,SAA7B,EAA+BS,QAA/B,CAA7B;AACD;AACF,KAtCkB;;AAAA,sBAEO,MAAKb,KAFZ;AAAA,QAETW,KAFS,eAETA,KAFS;AAAA,QAEFI,IAFE,eAEFA,IAFE;AAGjB,UAAKJ,KAAL,GAAaA,KAAb;AACA,UAAKL,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,IADK;AAEXG,MAAAA,IAAI,EAAEO;AAFK,KAAb;AAIA,UAAKL,EAAL,GAAU,CAAC,CAAX;AACA,UAAKI,QAAL,GAAgB,EAAhB;AATiB;AAUlB;;;;wCAEmB;AAAA;;AAClB,WAAKZ,WAAL,GAAmBO,UAAU,CAAC,YAAM;AAAE,QAAA,MAAI,CAACL,UAAL;AAAoB,OAA7B,EAA+B,IAA/B,CAA7B;AACD;;;6BA0BQ;AAAA,UACCI,IADD,GACU,KAAKF,KADf,CACCE,IADD;AAEP,aACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAE,KAAKM,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKIN,IALJ,CADF;AASD;;;;EApDoCV,KAAK,CAACkB,a;;SAAxBjB,S;AAuDrBA,SAAS,CAACkB,SAAV,GAAsB;AACpBN,EAAAA,KAAK,EAAEf,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,KAA5B,EAAmCC,UADtB;AAEpBL,EAAAA,IAAI,EAAEnB,SAAS,CAACyB,MAAV,CAAiBD;AAFH,CAAtB","sourcesContent":["import PropTypes from 'prop-types';\nimport TextyAnim from 'rc-texty';\nimport React from 'react';\n\nexport default class TextAnime extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const { texts, base } = this.props;\n    this.texts = texts;\n    this.state = {\n      show: true,\n      text: base,\n    };\n    this.id = -1;\n    this.interval = 50;\n  }\n\n  componentDidMount() {\n    this.timerHandle = setTimeout(() => { this.switchtext(); }, 5000);\n  }\n\n  componentWillUnmount = () => {\n    if (this.timerHandle) {\n      clearTimeout(this.timerHandle);\n      this.timerHandle = 0;\n    }\n  }\n\n  switchtext = () => {\n    const { show } = this.state;\n\n    if (show) {\n      this.setState({ show: false, text: '' });\n      this.timerHandle = setTimeout(() => { this.switchtext(); }, 100);\n    } else {\n      this.id = (this.id + 1) % this.texts.length;\n      this.setState({\n        text: this.texts[this.id][0],\n        show: true,\n      });\n      const showTime = (typeof this.texts[this.id][1] !== 'undefined' && this.texts[this.id][1] !== 0) ? this.texts[this.id][1] * 1000 : 10000 - this.interval * this.texts[this.id][0].length;\n      this.timerHandle = setTimeout(() => { this.switchtext(); }, showTime);\n    }\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <TextyAnim\n        type=\"mask-top\"\n        mode=\"smooth\"\n        interval={this.interval}\n      >\n        { text }\n      </TextyAnim>\n    );\n  }\n}\n\nTextAnime.propTypes = {\n  texts: PropTypes.arrayOf(PropTypes.array).isRequired,\n  base: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}